//: Playground - noun: a place where people can play

import UIKit
import Foundation

struct Room {
    var w, h : Int

}

struct Point {
    var x, y : Int
}

enum MovePerson {
    case Left
    case Right
    case Up
    case Down
}


struct Person {
    static var target: Bool = false //–≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ü–µ–ª—å, –∫—É–¥–∞ –Ω–∞–¥–æ –¥–æ—Ç–∞—â–∏—Ç—å —è—â–∏–∫–∏
    
    var room: Room
    
    var hero: Point {
        didSet { //—á—Ç–æ –±—ã –≥–µ—Ä–æ–π –Ω–µ –≤—ã—Ö–æ–¥–∏–ª –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –ø–æ–ª—è
            if hero.x < 2 || hero.x == room.w {
                hero.x = oldValue.x
            }
            
            if hero.y < 2 || hero.y == room.h {
                hero.y = oldValue.y
            }
        }
        
    }


    let endPoint: Point
    var box: Point {
        didSet{
            if box.x < 2 || box.x > 6 {
                box.x = oldValue.x
            }
            if box.y < 2 || box.y > 6 {
                box.y = oldValue.y
            }
        }
    }
    
    func targetDone () {
        if box.x == endPoint.x && box.y == endPoint.y {
            Person.target = true
        }
    }
    
    mutating func move(direction: MovePerson, amount: Int = 1) {
        switch direction {
        case .Down:
            hero.y -= amount
            if hero.y == box.x && hero.x == box.x {
                box.y -= amount
                if box.y == hero.y{
                    
                    hero.y += amount
                    print("–ù–µ –º–æ–≥—É –¥–≤–∏–≥–∞—Ç—å—Å—è!")
               
                }
                
                targetDone()
            }
            
        case .Left:
            hero.x -= amount
            if hero.x == box.x && hero.y == box.y {
                box.y -= amount
                if box.y == hero.y {
                    hero.y += amount
                        print("–ù–µ –º–æ–≥—É –¥–≤–∏–≥–∞—Ç—å—Å—è")
                }
                
                targetDone()
            }
            
        case .Right:
            hero.x += amount
            if hero.x == box.x && hero.y == box.y {
                box.x += amount
                if box.x == hero.x {
                    hero.x -= amount
                    print("–ù–µ –º–æ–≥—É –¥–≤–∏–≥–∞—Ç—å—Å—è")
                }
                targetDone()
            }
            
        case .Up:
            hero.y += amount
            if hero.x == box.x && hero.y == box.y {
                box.y += amount
                if box.x == hero.y {
                    hero.y -= amount
                    print("–ù–µ –º–æ–≥—É –¥–≤–∏–≥–∞—Ç—å—Å—è")
                }
                targetDone()
            }
        }
    }
        
        func printField() {
            
            var str = ""
            
            for i in (1...room.h).reversed() {
                for j in 1...room.w {
                    if Person.target == true {
                        if i == 1 || i == room.h {
                            str.append("üÜò") //–∫—Ä–∞—Å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
                        } else if j == 1 || j == room.w {
                            str.append("üÜò") //–∫—Ä–∞—Å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                        } else {
                            str.append("üëè") //–≤—ã–∏–≥—Ä–∞–ª!
                        }
                    }else if i == 1 || i == room.h {
                        str.append ("üÜò")
                    } else if j == 1 || j == room.w {
                        str.append ("üÜò")
                    } else if i == hero.y && j == hero.x {
                        str.append("üê∂") //–º–æ–π –≥–µ—Ä–æ–π
                    } else if i == box.y && j == box.x {
                        str.append ("üéæ") //–º—è—á–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –¥–æ—Ç–∞—â–∏—Ç—å –¥–æ —Ü–µ–ª–∏
                    } else if i == endPoint.x && j == endPoint.y {
                        str.append ("üèÅ") //—Ñ–∏–Ω–∏—à –∫—É–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–∏—Ç–∞—â–∏—Ç—å –º—è—á
                    } else {
                        str.append("‚óª") //–≥—Ä–∞–Ω–∏—Ü—ã —Ñ–æ–Ω–∞ –¥–ª—è —Ö–æ–¥—å–±—ã
                    }
                }
                str.append("\n")
            }
        print(str)
        
        }
    }
    
        var person = Person (room: Room (w: 7, h: 7), hero: Point (x: 2, y: 2), endPoint: Point (x: 6, y: 6), box: Point (x: 4, y: 4))

person.printField()

person.move(direction: .Up)
person.move(direction: .Up)
person.move(direction: .Right)
person.move(direction: .Right)
person.move(direction: .Right)
person.move(direction: .Down)
person.move(direction: .Right)
person.move(direction: .Up)
person.move(direction: .Up)
person.printField()

